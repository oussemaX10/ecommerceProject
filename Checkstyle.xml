<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration for ERP Spring Boot 3 project
    Blocks commits with unused imports and System.out.println statements
-->

<module name="Checker">
    <!-- Root Checks -->
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="error"/>
    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Excludes all 'module-info.java' files -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- Exclude generated code -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value=".*(generated|target|build).*\.java$"/>
    </module>

    <!-- File Tab Character -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <!-- Line Length -->
    <module name="LineLength">
        <property name="fileExtensions" value="java"/>
        <property name="max" value="120"/>
        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>

    <!-- TreeWalker -->
    <module name="TreeWalker">
        
        <!-- CRITICAL: Block unused imports -->
        <module name="UnusedImports">
            <property name="severity" value="error"/>
            <message key="import.unused" 
                     value="❌ COMMIT BLOCKED: Unused import ''{0}'' - Remove unused imports before committing"/>
        </module>

        <!-- CRITICAL: Block redundant imports -->
        <module name="RedundantImport">
            <property name="severity" value="error"/>
            <message key="import.redundant" 
                     value="❌ COMMIT BLOCKED: Redundant import ''{0}'' - Remove redundant imports before committing"/>
        </module>

        <!-- CRITICAL: Block System.out.println and System.err.println -->
        <module name="Regexp">
            <property name="format" value="System\.(out|err)\.print"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="error"/>
            <property name="message" value="❌ COMMIT BLOCKED: System.out/System.err usage detected - Use proper logging (SLF4J) instead"/>
        </module>

        <!-- CRITICAL: Block printStackTrace() -->
        <module name="Regexp">
            <property name="format" value="\.printStackTrace\(\)"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="error"/>
            <property name="message" value="❌ COMMIT BLOCKED: printStackTrace() usage detected - Use proper logging instead"/>
        </module>

        <!-- Import Controls -->
        <module name="ImportOrder">
            <property name="groups" value="/^java\./,javax,org,com"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="top"/>
            <property name="severity" value="error"/>
        </module>

        <!-- Illegal Imports -->
        <module name="IllegalImport">
            <property name="illegalPkgs" value="sun, com.sun"/>
            <property name="severity" value="error"/>
        </module>

        <!-- Annotations -->
        <module name="AnnotationUseStyle">
            <property name="elementStyle" value="compact"/>
        </module>

        <!-- Blocks -->
        <module name="AvoidNestedBlocks">
            <property name="severity" value="warning"/>
        </module>

        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>

        <module name="LeftCurly">
            <property name="option" value="eol"/>
        </module>

        <module name="RightCurly">
            <property name="option" value="same"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE"/>
        </module>

        <!-- Class Design -->
        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>
        <module name="HideUtilityClassConstructor"/>

        <!-- Coding -->
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="severity" value="warning"/>
            <property name="ignoreNumbers" value="-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100, 1000"/>
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
        </module>

        <module name="MissingSwitchDefault"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Metrics -->
        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Miscellaneous -->
        <module name="ArrayTypeStyle"/>
        <module name="CommentsIndentation"/>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="4"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="arrayInitIndent" value="4"/>
        </module>

        <module name="OuterTypeFilename"/>
        <module name="UpperEll"/>

        <!-- Modifiers -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Naming -->
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Class type name ''{0}'' must match pattern ''{1}''"/>
        </module>

        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Method type name ''{0}'' must match pattern ''{1}''"/>
        </module>

        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{1}''"/>
        </module>

        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Size Violations -->
        <module name="AnonInnerLength"/>
        <module name="MethodLength">
            <property name="tokens" value="METHOD_DEF"/>
            <property name="max" value="100"/>
            <property name="countEmpty" value="false"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="ParameterNumber">
            <property name="max" value="7"/>
            <property name="ignoreOverriddenMethods" value="true"/>
            <property name="tokens" value="METHOD_DEF"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Whitespace -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Spring Boot specific checks -->
        <module name="Regexp">
            <property name="format" value="@Autowired.*\n.*private"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="warning"/>
            <property name="message" value="⚠️ Consider using constructor injection instead of field injection"/>
        </module>

        <!-- ERP Security specific checks -->
        <module name="Regexp">
            <property name="format" value="password.*=.*[&quot;'][^$]"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="error"/>
            <property name="message" value="❌ COMMIT BLOCKED: Hardcoded password detected - Use environment variables or secure configuration"/>
        </module>

        <module name="Regexp">
            <property name="format" value="(secret|key|token).*=.*[&quot;'][^$]"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="error"/>
            <property name="message" value="❌ COMMIT BLOCKED: Hardcoded secret/key/token detected - Use secure configuration"/>
        </module>

        <!-- Database connection security -->
        <module name="Regexp">
            <property name="format" value="jdbc:.*password="/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="error"/>
            <property name="message" value="❌ COMMIT BLOCKED: Database password in connection string - Use secure configuration"/>
        </module>

        <!-- MongoDB connection security -->
        <module name="Regexp">
            <property name="format" value="mongodb://.*:.*@"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="error"/>
            <property name="message" value="❌ COMMIT BLOCKED: MongoDB credentials in connection string - Use secure configuration"/>
        </module>

        <!-- Elasticsearch security -->
        <module name="Regexp">
            <property name="format" value="elasticsearch.*password"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="error"/>
            <property name="message" value="❌ COMMIT BLOCKED: Elasticsearch credentials detected - Use secure configuration"/>
        </module>

        <!-- OAuth2/Keycloak security -->
        <module name="Regexp">
            <property name="format" value="(client[-_]secret|keycloak.*secret).*=.*[&quot;'][^$]"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="severity" value="error"/>
            <property name="message" value="❌ COMMIT BLOCKED: OAuth2/Keycloak secret detected - Use secure configuration"/>
        </module>

        <!-- TODO comments check -->
        <module name="TodoComment">
            <property name="severity" value="info"/>
            <property name="format" value="(TODO|FIXME|XXX)"/>
        </module>

        <!-- Javadoc Comments -->
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocMethod">
            <property name="severity" value="info"/>
            <property name="scope" value="public"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="allowedAnnotations" value="Override, Test, Before, After, BeforeEach, AfterEach"/>
        </module>

        <module name="JavadocType">
            <property name="severity" value="info"/>
            <property name="scope" value="public"/>
        </module>

        <module name="JavadocVariable">
            <property name="severity" value="info"/>
            <property name="scope" value="public"/>
        </module>

        <module name="MissingJavadocMethod">
            <property name="severity" value="info"/>
            <property name="scope" value="public"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
        </module>

    </module>

    <!-- File-based checks -->
    <module name="NewlineAtEndOfFile"/>
    
    <!-- Properties file checks -->
    <module name="Translation"/>
    <module name="UniqueProperties"/>

    <!-- Suppression Filter -->
    <module name="SuppressionFilter">
        <property name="file" value="${org.checkstyle.sun.suppressionfilter.config}"
                  default="checkstyle-suppressions.xml"/>
        <property name="optional" value="true"/>
    </module>

</module>
